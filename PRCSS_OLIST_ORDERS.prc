CREATE OR REPLACE PROCEDURE PRCSS_OLIST_ORDERS (P_DT IN DATE DEFAULT TRUNC(SYSDATE-2) ) 
AS 
V_DT DATE := P_DT;


BEGIN
   
        /* INSERT DE TABLAS DIMENSIONALES QUE SE TRUNCARAN A DIARIO*/
        
        EXECUTE IMMEDIATE 'TRUNCATE TABLE DIM_STATE';
        EXECUTE IMMEDIATE 'TRUNCATE TABLE DIM_CUSTOMER';
        EXECUTE IMMEDIATE 'TRUNCATE TABLE DIM_PRODUCTO';

        INSERT INTO DIM_STATE 
        SELECT DISTINCT CUSTOMER_STATE STATE_NM, CUSTOMER_CITY CITY_NM 
        FROM TBL_OLIST_CUSTOMERS
        ORDER BY 1;
        COMMIT;

        INSERT INTO DIM_CUSTOMER 
        SELECT DISTINCT CUSTOMER_ID, CUSTOMER_UNIQUE_ID, CUSTOMER_STATE STATE_NM 
        FROM TBL_OLIST_CUSTOMERS;
        COMMIT;

        INSERT INTO DIM_PRODUCTO 
        SELECT DISTINCT PRODUCT_ID, PRICE, FREIGHT_VALUE 
        FROM TBL_OLIST_ORDER_ITEMS;
        COMMIT;
        
        --- CREACIÓN DE TABLAS INTERMEDIAS PARA LLEGAR A LA TABLA FINAL ---
        
       /* TABLA QUE TRAE EL DETALLE DE LA ORDEN Y SE AGREGA EL STATUS ID 
          SE TRUNCARA A DIARIO, DEPENDIENDO DE LA HORA QUE SE CARGUE LA INFO */
        

        EXECUTE IMMEDIATE 'TRUNCATE TABLE TBL_ORDERS_STATUS';
        
        INSERT INTO TBL_ORDERS_STATUS 
        SELECT DISTINCT A.*, CASE WHEN ORDER_STATUS = 'created' THEN 1 
        WHEN ORDER_STATUS = 'processing' THEN 2
        WHEN ORDER_STATUS = 'approved' THEN 3
        WHEN ORDER_STATUS = 'invoiced' THEN 4
        WHEN ORDER_STATUS = 'unavailable' THEN 5
        WHEN ORDER_STATUS = 'shipped' THEN 6
        WHEN ORDER_STATUS = 'delivered' THEN 7 
        WHEN ORDER_STATUS = 'canceled' THEN 8
        END STATUS_ID
        FROM TBL_OLIST_ORDERS A
        WHERE TRUNC(ORDER_PURCHASE_TIMESTAMP) = V_DT;
        COMMIT;
     
    /* SE REUTILIZA LA TABLA CREADA ANTERIORMENTE Y AGREGA EL PRODUCT ID 
    Y LA FECHA LIMITE DE ENTREGA AL REPARTIDOR, TAMBIÉN SE TRUNCARA A DIARIO */
    
        EXECUTE IMMEDIATE 'TRUNCATE TABLE TBL_DTL_ORDERS_STATUS';
        
        INSERT INTO TBL_DTL_ORDERS_STATUS 
        SELECT A.*, B.ORDER_ITEM_ID, B.PRODUCT_ID, B.SHIPPING_LIMIT_DATE
        FROM TBL_ORDERS_STATUS A
        LEFT JOIN TBL_OLIST_ORDER_ITEMS B ON A.ORDER_ID = B.ORDER_ID;
        COMMIT;
                
        /* TABLA HECHOS, TABLA FINAL*/
              
        EXECUTE IMMEDIATE 'TRUNCATE TABLE TBL_ORDERS_FCT';
        
        INSERT INTO TBL_ORDERS_FCT
        SELECT DISTINCT A.ORDER_ID, TRUNC(A.ORDER_PURCHASE_TIMESTAMP)ORDER_PURCHASE_FCT, A.CUSTOMER_ID, B.CUSTOMER_UNIQUE_ID, 
        D.STATUS_ID, A.ORDER_STATUS, A.ORDER_ITEM_ID, B.STATE_NM, C.CITY_NM, A.ORDER_PURCHASE_TIMESTAMP, A.ORDER_APPROVED_AT, 
        A.SHIPPING_LIMIT_DATE, A.ORDER_DELIVERED_CARRIER_DATE, A.ORDER_DELIVERED_CUSTOMER_DATE, A.ORDER_ESTIMATED_DELIVERY_DATE,
        E.PRICE, E.FREIGHT_VALUE, SUM((E.PRICE*A.ORDER_ITEM_ID)+(E.FREIGHT_VALUE*A.ORDER_ITEM_ID)) TOTAL_ORDER
        FROM TBL_DTL_ORDERS_STATUS A
        LEFT JOIN DIM_CUSTOMER B ON A.CUSTOMER_ID = B.CUSTOMER_ID 
        LEFT JOIN DIM_STATE C ON B.STATE_NM = C.STATE_NM	
        LEFT JOIN DIM_STATUS D ON A.STATUS_ID = D.STATUS_ID
        LEFT JOIN DIM_PRODUCTO E ON A.PRODUCT_ID = E.PRODUCT_ID
        WHERE TRUNC(A.ORDER_PURCHASE_TIMESTAMP) = V_DT 
        GROUP BY A.ORDER_ID, TRUNC(A.ORDER_PURCHASE_TIMESTAMP), A.CUSTOMER_ID, B.CUSTOMER_UNIQUE_ID, D.STATUS_ID, A.ORDER_STATUS,
        A.ORDER_ITEM_ID, B.STATE_NM, C.CITY_NM, A.ORDER_PURCHASE_TIMESTAMP, A.ORDER_APPROVED_AT, A.SHIPPING_LIMIT_DATE, A.ORDER_DELIVERED_CARRIER_DATE, 
        A.ORDER_DELIVERED_CUSTOMER_DATE, A.ORDER_ESTIMATED_DELIVERY_DATE, E.PRICE, E.FREIGHT_VALUE;
        COMMIT;      
        
        /* TABLA RESUMEN PARA PODER LLEVARLO A UN REPORTE DE VENTAS O UN REPORTE QUE SEA NECESARIO,
        SE AGREGA EL DELETE POR SI SE NECESITA HACER UN REPROCESO, ASÍ NO SE DUPLICAN LOS DATOS */
        
        DELETE FROM TBL_SMMRY_ORDERS_FCT  WHERE ORDER_PURCHASE_FCT = V_DT;
        COMMIT;
        
        INSERT INTO TBL_SMMRY_ORDERS_FCT 
        SELECT SUM(CASE WHEN ORDER_ID IS NOT NULL THEN 1 ELSE 0 END) ORDERS, ORDER_PURCHASE_FCT,SUM(CASE WHEN CUSTOMER_ID IS NOT NULL THEN 1 ELSE 0 END)CUSTOMERS,
        STATUS_ID, ORDER_STATUS, ORDER_ITEM_ID, STATE_NM, CITY_NM, TRUNC(ORDER_PURCHASE_TIMESTAMP)ORDER_PURCHASE_TIMESTAMP, 
        TRUNC(ORDER_APPROVED_AT)ORDER_APPROVED_AT, TRUNC(SHIPPING_LIMIT_DATE)SHIPPING_LIMIT_DATE, 
        TRUNC(ORDER_DELIVERED_CARRIER_DATE)ORDER_DELIVERED_CARRIER_DATE, TRUNC(ORDER_DELIVERED_CUSTOMER_DATE)ORDER_DELIVERED_CUSTOMER_DATE,
        TRUNC(ORDER_ESTIMATED_DELIVERY_DATE)ORDER_ESTIMATED_DELIVERY_DATE, SUM(TOTAL_ORDER)TOTAL_ORDER
        FROM TBL_ORDERS_FCT
        WHERE ORDER_PURCHASE_FCT = V_DT
        GROUP BY ORDER_PURCHASE_FCT, STATUS_ID, ORDER_STATUS, ORDER_ITEM_ID, STATE_NM, CITY_NM,TRUNC(ORDER_PURCHASE_TIMESTAMP), 
        TRUNC(ORDER_APPROVED_AT), TRUNC(SHIPPING_LIMIT_DATE), TRUNC(ORDER_DELIVERED_CARRIER_DATE), TRUNC(ORDER_DELIVERED_CUSTOMER_DATE),
        TRUNC(ORDER_ESTIMATED_DELIVERY_DATE) ;
        COMMIT;

END;